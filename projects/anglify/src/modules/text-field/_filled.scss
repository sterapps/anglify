@import 'variables';

:host-context(.text-field-type-filled) {
  --icon-inactive-color: #{$text-field-filled-icon-color-inactive};

  .text-field-container {
    background-color: $text-field-filled-background-inactive;
    border-radius: $text-field-filled-border-radius;
    padding-inline-start: $text-field-filled-padding-start;
    padding-inline-end: $text-field-filled-padding-start;
    overflow-x: hidden;

    label {
      .label {
        transition-duration: $transition-duration;
        transition-property: max-width, transform;
        transition-timing-function: $text-field-transition-timing-function;
        transform-origin: left;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        width: fit-content;
        max-width: 100%;
      }

      ::ng-deep input {
        padding-block-start: $text-field-filled-padding-top;
        padding-block-end: $text-field-filled-padding-bottom;
        color: $text-field-filled-text-color-inactive;
      }
    }

    /* This pseudo element contains the inactive bottom border */
    &:before {
      content: '';
      position: absolute;
      width: 100%;
      bottom: 0;
      border-bottom: 1px solid $text-field-filled-border-color-inactive;
    }

    /* This pseudo element contains the focused bottom border. It animates on focus from the center to the edges */
    &:after {
      content: '';
      position: absolute;
      width: 0;
      background-color: $text-field-filled-border-color-focused;
      transition: width $transition-duration $text-field-transition-timing-function;
      bottom: 0;
      height: 2px;
      justify-self: center;
    }
  }

  &.focused {
    --icon-inactive-color: #{$text-field-filled-icon-color-focused};

    .text-field-container {
      background-color: $text-field-filled-background-focused;

      &:after {
        width: 100%;
        height: 2px;
      }

      .label {
        color: $text-field-filled-label-color-focused;
      }

      ::ng-deep input {
        color: $text-field-filled-text-color-focused;

        &::placeholder {
          color: $text-field-filled-placeholder-color-focused;
        }
      }
    }
  }

  &:not(.focused):not(.disabled) {
    .text-field-container {
      &:hover {
        background-color: $text-field-filled-background-hovered;
      }

      .label {
        color: $text-field-filled-label-color-inactive;
      }
    }
  }

  &.persistent-placeholder,
  &.floating {
    &:not(.focused):not(.disabled) {
      .text-field-container::ng-deep input {
        &::placeholder {
          color: $text-field-filled-placeholder-color-inactive;
        }
      }
    }
  }

  &.focused,
  &.persistent-placeholder,
  &.floating {
    .label {
      transform: translateY(calc((#{$text-field-line-height} - #{$text-field-filled-padding-bottom}) * -1)) scale(0.75);
      max-width: calc(100% / 0.75) !important;
    }
  }

  &:not(.has-label) {
    .text-field-container::ng-deep input {
      padding-block-start: 14px !important;
      padding-block-end: 14px !important;
    }
  }

  &.disabled {
    --icon-inactive-color: #{$text-field-filled-icon-color-disabled};

    ::ng-deep input {
      color: $text-field-filled-text-color-disabled !important;
    }

    .text-field-container {
      color: $text-field-filled-label-color-disabled !important;

      &:before {
        border-bottom-style: dashed;
      }
    }

    &.persistent-placeholder {
      .text-field-container {
        ::ng-deep input {
          &::placeholder {
            color: $text-field-filled-placeholder-color-disabled;
          }
        }
      }
    }
  }
}
