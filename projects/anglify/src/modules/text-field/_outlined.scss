@use 'variables' as *;
@use '../../styles/mixins/notched-outline' as *;

.anglify-text-field.text-field-type-outlined {
  --icon-inactive-color: #{$text-field-outlined-icon-color-inactive};
  padding-top: calc((#{$text-field-font-size} * #{$text-field-label-scale-focused}) / 2);

  .text-field-container {
    background-color: $text-field-outlined-background-inactive;
    padding-inline-start: $text-field-outlined-padding-start;
    padding-inline-end: $text-field-outlined-padding-start;

    input {
      padding-block-start: $text-field-outlined-padding-top;
      padding-block-end: $text-field-outlined-padding-bottom;
    }

    .text-field-border {
      @include notched-outline($text-field-outlined-border-radius, $transition-duration);
      --notched-outline-border-color: #{$text-field-outlined-border-color-inactive};
      --notched-outline-start-width: #{$text-field-outlined-padding-start};

      .notch * {
        display: block;
        transform: translateY(-50%);
        visibility: hidden;
        font-size: calc(#{$text-field-font-size} * #{$text-field-label-scale-focused});
      }
    }

    .label {
      transition-duration: $transition-duration;
      transition-property: transform, max-width, margin-inline-start, width;
      transition-timing-function: $text-field-transition-timing-function;
      transform-origin: left;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      max-width: 100%;
      font-size: $text-field-font-size;
    }
  }

  &.focused {
    --icon-inactive-color: #{$text-field-outlined-icon-color-focused};

    .text-field-container {
      background-color: $text-field-outlined-background-focused;

      .text-field-border {
        --notched-outline-border-width: 2px;
        --notched-outline-border-color: #{$text-field-outlined-border-color-focused};
      }

      input {
        color: $text-field-outlined-text-color-focused;

        &::placeholder {
          color: $text-field-outlined-placeholder-color-focused;
        }
      }

      .label {
        color: $text-field-outlined-label-color-focused;
        --icon-inactive-color: #{$text-field-outlined-label-color-focused};
      }
    }
  }

  &.persistent-placeholder,
  &.floating {
    &:not(.focused):not(.disabled) {
      .text-field-container input {
        &::placeholder {
          color: $text-field-outlined-placeholder-color-inactive;
        }
      }
    }
  }

  &.focused,
  &.persistent-placeholder,
  &.floating {
    .text-field-container {
      .text-field-border {
        --notched-outline-notch-width: 0;

        .notch {
          width: auto;
        }
      }

      .label {
        $translateY: calc(
          (#{$text-field-line-height} + #{$text-field-outlined-padding-bottom} + #{$text-field-outlined-padding-top}) / 2 * -1
        );
        transform: translateY($translateY) scale($text-field-label-scale-focused);
        grid-column: 1 / 3;
        grid-row: 1;
        max-width: calc(100% / #{$text-field-label-scale-focused});
        width: calc(100% / #{$text-field-label-scale-focused});
      }
    }
  }

  &:not(.focused):not(.disabled) {
    .text-field-container {
      input {
        color: $text-field-outlined-text-color-inactive;
      }

      .label {
        color: $text-field-outlined-label-color-inactive;
        --icon-inactive-color: $text-field-outlined-label-color-inactive;
      }

      &:hover {
        background-color: $text-field-outlined-background-hovered;

        .text-field-border {
          --notched-outline-border-color: #{$text-field-outlined-border-color-hovered};
        }
      }
    }
  }

  &:not(.has-label) {
    --notched-outline-padding: 0px;

    .notch {
      width: 0 !important;
    }
  }

  &.disabled {
    --icon-inactive-color: #{$text-field-outlined-icon-color-disabled};

    input {
      color: $text-field-outlined-text-color-disabled;
    }

    .text-field-container {
      color: $text-field-outlined-label-color-disabled;
    }

    &.persistent-placeholder {
      .text-field-container {
        input {
          &::placeholder {
            color: $text-field-outlined-placeholder-color-disabled;
          }
        }
      }
    }
  }

  &.dense {
    &.focused,
    &.persistent-placeholder,
    &.floating {
      .text-field-container .label {
        $translateY: calc(
          (#{$text-field-line-height} + #{$text-field-outlined-padding-bottom-dense} + #{$text-field-outlined-padding-top-dense}) / 2 * -1
        );
        transform: translateY($translateY) scale($text-field-label-scale-focused);
      }
    }

    .text-field-container {
      padding-inline-start: $text-field-outlined-padding-start-dense;
      padding-inline-end: $text-field-outlined-padding-start-dense;

      .text-field-border {
        --notched-outline-start-width: #{$text-field-outlined-padding-start-dense};
      }

      input {
        padding-block-start: $text-field-outlined-padding-top-dense;
        padding-block-end: $text-field-outlined-padding-bottom-dense;
      }
    }
  }
}
